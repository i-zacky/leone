AWSTemplateFormatVersion: 2010-09-09
Description: VPC

Parameters:
  Project:
    Default: leone
    Type: String
    Description: Project Name
  Env:
    Default: dev
    Type: String
    Description: Environment Name

  CIDR:
    Type: String
    Description: CIDR Block

  PublicSubnetCIDRA:
    Type: String
    Description: Public Subnet CIDR Block AZ-A
  PublicSubnetCIDRC:
    Type: String
    Description: Public Subnet CIDR Block AZ-C
  PublicSubnetCIDRD:
    Type: String
    Description: Public Subnet CIDR Block AZ-D

  PrivateSubnetCIDRA:
    Type: String
    Description: Private Subnet CIDR Block AZ-A
  PrivateSubnetCIDRC:
    Type: String
    Description: Private Subnet CIDR Block AZ-C
  PrivateSubnetCIDRD:
    Type: String
    Description: Private Subnet CIDR Block AZ-D

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-vpc"

  # Public Subnet
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCIDRA
      AvailabilityZone: !Sub "${AWS::Region}a"
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-public-a"
  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCIDRC
      AvailabilityZone: !Sub "${AWS::Region}c"
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-public-c"
  PublicSubnetD:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCIDRD
      AvailabilityZone: !Sub "${AWS::Region}d"
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-public-d"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-igw"
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-public-rt-a"
  PublicRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTableA

  PublicRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-public-rt-c"
  PublicRouteC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTableC
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicRouteTableAssociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      RouteTableId: !Ref PublicRouteTableC

  PublicRouteTableD:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-public-rt-d"
  PublicRouteD:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTableD
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicRouteTableAssociationD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetD
      RouteTableId: !Ref PublicRouteTableD

  # Private Subnet
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCIDRA
      AvailabilityZone: !Sub "${AWS::Region}a"
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-private-a"
  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCIDRC
      AvailabilityZone: !Sub "${AWS::Region}c"
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-private-c"
  PrivateSubnetD:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCIDRD
      AvailabilityZone: !Sub "${AWS::Region}d"
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-private-d"

  NatEIPA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-eip-a"
  NatEIPC:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-eip-c"
  NatEIPD:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-eip-d"

  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEIPA.AllocationId
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-natgw-a"
  NatGatewayC:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEIPC.AllocationId
      SubnetId: !Ref PublicSubnetC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-natgw-c"
  NatGatewayD:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEIPD.AllocationId
      SubnetId: !Ref PublicSubnetD
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-natgw-d"

  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-private-rt-a"
  PrivateRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA
  PrivateRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTableA

  PrivateRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-private-rt-c"
  PrivateRouteC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableC
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayC
  PrivateRouteTableAssociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetC
      RouteTableId: !Ref PrivateRouteTableC

  PrivateRouteTableD:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-private-rt-d"
  PrivateRouteD:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableD
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayD
  PrivateRouteTableAssociationD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetD
      RouteTableId: !Ref PrivateRouteTableD

  # NetworkACL
  NetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-${Project}-nacl"

  InboundNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
  OutBoundNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0

  PublicNetworkAclAssociationA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      NetworkAclId:
        Ref: NetworkAcl
  PublicNetworkAclAssociationC:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      NetworkAclId:
        Ref: NetworkAcl
  PublicNetworkAclAssociationD:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnetD
      NetworkAclId:
        Ref: NetworkAcl

  PrivateNetworkAclAssociationA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      NetworkAclId: !Ref NetworkAcl
  PrivateNetworkAclAssociationC:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetC
      NetworkAclId: !Ref NetworkAcl
  PrivateNetworkAclAssociationD:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetD
      NetworkAclId: !Ref NetworkAcl

Outputs:
  VPCId:
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-id"
  VPCCIDR:
    Value: !Ref CIDR
    Export:
      Name: !Sub "${AWS::StackName}-cidr"

  PublicSubnetAId:
    Value: !Ref PublicSubnetA
    Export:
      Name: !Sub "${AWS::StackName}-public-subnet-a-id"
  PublicSubnetCId:
    Value: !Ref PublicSubnetC
    Export:
      Name: !Sub "${AWS::StackName}-public-subnet-c-id"
  PublicSubnetDId:
    Value: !Ref PublicSubnetD
    Export:
      Name: !Sub "${AWS::StackName}-public-subnet-d-id"

  InternetGatewayId:
    Value: !Ref InternetGateway
    Export:
      Name: !Sub "${AWS::StackName}-igw-id"

  PublicRouteTableA:
    Value: !Ref PublicRouteTableA
    Export:
      Name: !Sub "${AWS::StackName}-public-rt-a-id"
  PublicRouteTableC:
    Value: !Ref PublicRouteTableC
    Export:
      Name: !Sub "${AWS::StackName}-public-rt-c-id"
  PublicRouteTableD:
    Value: !Ref PublicRouteTableD
    Export:
      Name: !Sub "${AWS::StackName}-public-rt-d-id"

  PrivateSubnetAId:
    Value: !Ref PrivateSubnetA
    Export:
      Name: !Sub "${AWS::StackName}-private-subnet-a-id"
  PrivateSubnetCId:
    Value: !Ref PrivateSubnetC
    Export:
      Name: !Sub "${AWS::StackName}-private-subnet-c-id"
  PrivateSubnetDId:
    Value: !Ref PrivateSubnetD
    Export:
      Name: !Sub "${AWS::StackName}-private-subnet-d-id"

  NatEIPA:
    Value: !Ref NatEIPA
    Export:
      Name: !Sub "${AWS::StackName}-eip-a"
  NatEIPC:
    Value: !Ref NatEIPC
    Export:
      Name: !Sub "${AWS::StackName}-eip-c"
  NatEIPD:
    Value: !Ref NatEIPD
    Export:
      Name: !Sub "${AWS::StackName}-eip-d"

  NatGatewayA:
    Value: !Ref NatGatewayA
    Export:
      Name: !Sub "${AWS::StackName}-natgw-a-id"
  NatGatewayC:
    Value: !Ref NatGatewayC
    Export:
      Name: !Sub "${AWS::StackName}-natgw-c-id"
  NatGatewayD:
    Value: !Ref NatGatewayD
    Export:
      Name: !Sub "${AWS::StackName}-natgw-d-id"

  PrivateRouteTableA:
    Value: !Ref PrivateRouteTableA
    Export:
      Name: !Sub "${AWS::StackName}-private-rt-a-id"
  PrivateRouteTableC:
    Value: !Ref PrivateRouteTableC
    Export:
      Name: !Sub "${AWS::StackName}-private-rt-c-id"
  PrivateRouteTableD:
    Value: !Ref PrivateRouteTableD
    Export:
      Name: !Sub "${AWS::StackName}-private-rt-d-id"

  NetworkAcl:
    Value: !Ref NetworkAcl
    Export:
      Name: !Sub "${AWS::StackName}-nacl-id"
