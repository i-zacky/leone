AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: RDS

Parameters:
  Project:
    Type: String
  Env:
    Type: String

  PrivateSubnetIds:
    Type: String
  AuroraSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
  DatabaseName:
    Type: String
  MasterUsername:
    Type: String

Mappings:
  Aurora:
    General:
      Family: aurora-postgresql13
      Engine: aurora-postgresql
      EngineVersion: 13.4
      Port: 5432
    ap-northeast-1:
      Timezone: Asia/Tokyo
    dev:
      InstanceClass: db.t3.medium
    stg:
      InstanceClass: db.t3.medium
    prod:
      InstanceClass: db.t3.medium

Conditions:
  IsNotDev: !Not [!Equals [!Ref Env, 'dev']]

Resources:
  AuroraSubnetGroup:
    Type: AWS::Serverless::Application
    Properties:
      Location: db-subnet-group.yaml
      Parameters:
        Name: !Sub '${Env}-${Project}-aurora-sng'
        Description: !Sub '${Env}-${Project}-aurora-sng'
        SubnetIds: !Ref PrivateSubnetIds

  AuroraClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: !Sub '${Env}-${Project}-aurora-cluster-pg'
      Family: !FindInMap [Aurora, General, Family]
      Parameters:
        timezone: !FindInMap [Aurora, !Ref AWS::Region, Timezone]

  AuroraDBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: !Sub '${Env}-${Project}-aurora-db-pg'
      Family: !FindInMap [Aurora, General, Family]

  AuroraCluster:
    Type: AWS::Serverless::Application
    DependsOn:
      - AuroraSubnetGroup
      - AuroraClusterParameterGroup
    Properties:
      Location: db-cluster.yaml
      Parameters:
        DBClusterIdentifier: !Sub '${Env}-${Project}-aurora-cluster'
        DBClusterParameterGroupName: !Ref AuroraClusterParameterGroup
        DBSubnetGroupName: !GetAtt AuroraSubnetGroup.Outputs.DBSubnetGroupId
        Engine: !FindInMap [Aurora, General, Engine]
        EngineVersion: !FindInMap [Aurora, General, EngineVersion]
        DatabaseName: !Ref DatabaseName
        MasterUsername: !Ref MasterUsername
        Port: !FindInMap [Aurora, General, Port]
        SecurityGroupId: !Ref AuroraSecurityGroupId

  AuroraInstanceA01:
    Type: AWS::Serverless::Application
    DependsOn:
      - AuroraCluster
      - AuroraSubnetGroup
      - AuroraDBParameterGroup
    Properties:
      Location: db-instance.yaml
      Parameters:
        AvailabilityZone: !Sub '${AWS::Region}a'
        Engine: !FindInMap [Aurora, General, Engine]
        EngineVersion: !FindInMap [Aurora, General, EngineVersion]
        DBClusterIdentifier: !GetAtt AuroraCluster.Outputs.DBClusterId
        DBInstanceIdentifier: !Sub '${Env}-${Project}-db-a01'
        DBInstanceClass: !FindInMap [Aurora, !Ref Env, InstanceClass]
        DBParameterGroupName: !Ref AuroraDBParameterGroup
        DBSubnetGroupName: !GetAtt AuroraSubnetGroup.Outputs.DBSubnetGroupId

  AuroraInstanceC01:
    Type: AWS::Serverless::Application
    Condition: IsNotDev
    DependsOn:
      - AuroraCluster
      - AuroraSubnetGroup
      - AuroraDBParameterGroup
    Properties:
      Location: db-instance.yaml
      Parameters:
        AvailabilityZone: !Sub '${AWS::Region}c'
        Engine: !FindInMap [Aurora, General, Engine]
        EngineVersion: !FindInMap [Aurora, General, EngineVersion]
        DBClusterIdentifier: !GetAtt AuroraCluster.Outputs.DBClusterId
        DBInstanceIdentifier: !Sub '${Env}-${Project}-db-c01'
        DBInstanceClass: !FindInMap [Aurora, !Ref Env, InstanceClass]
        DBParameterGroupName: !Ref AuroraDBParameterGroup
        DBSubnetGroupName: !GetAtt AuroraSubnetGroup.Outputs.DBSubnetGroupId

  AuroraInstanceD01:
    Type: AWS::Serverless::Application
    Condition: IsNotDev
    DependsOn:
      - AuroraCluster
      - AuroraSubnetGroup
      - AuroraDBParameterGroup
    Properties:
      Location: db-instance.yaml
      Parameters:
        AvailabilityZone: !Sub '${AWS::Region}d'
        Engine: !FindInMap [Aurora, General, Engine]
        EngineVersion: !FindInMap [Aurora, General, EngineVersion]
        DBClusterIdentifier: !GetAtt AuroraCluster.Outputs.DBClusterId
        DBInstanceIdentifier: !Sub '${Env}-${Project}-db-d01'
        DBInstanceClass: !FindInMap [Aurora, !Ref Env, InstanceClass]
        DBParameterGroupName: !Ref AuroraDBParameterGroup
        DBSubnetGroupName: !GetAtt AuroraSubnetGroup.Outputs.DBSubnetGroupId

Outputs:
  AuroraSecretArn:
    Value: !GetAtt AuroraCluster.Outputs.SecretArn
